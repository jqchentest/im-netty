group = 'com.jqchen'
version = '1.3'

buildscript {
    ext {
        springBootVersion = '2.1.5.RELEASE'
    }
    repositories {
        maven { url 'http://172.17.0.20:8081/artifactory/libs-release/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'


sourceCompatibility = 1.8
targetCompatibility = 1.8


jar {
    baseName = 'im-netty'
    version = "${project.version}"
}

repositories {
    maven { url 'http://172.17.0.20:8081/artifactory/libs-release/' }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'io.netty:netty-all:4.1.36.Final'
    compile 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compile 'com.alibaba:fastjson:1.2.54'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

task buildDocker(type: Docker, dependsOn: build) {
//    push =true
//    tag = "127.0.0.1:5000/im-netty"
    tag = "im-netty"
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
            rename { String fileName ->
                fileName.replace("-${project.version}", "")
            }
        }
    }
}
